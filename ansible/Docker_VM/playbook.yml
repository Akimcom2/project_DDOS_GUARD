---
- hosts: second 
  gather_facts: True
  become: True
  tasks:
    # Импортируем публичный ключ Docker
    - name: Import Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    # Обновляем список пакетов
    - name: Update apt cache
      apt:
        update_cache: yes

    # Добавляем репозиторий Docker
    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian bookworm stable
        state: present
        filename: docker.list

    # Устанавливаем пакеты Docker
    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: latest
        update_cache: yes

    # Запускаем и активируем сервис Docker
    - name: Enable and start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    # Добавляем текущего пользователя в группу Docker
    - name: Add current user to Docker group
      user:
        name: "{{ ansible_env.USER }}"
        groups: docker
        append: yes

    # Создаем директорию для Prometheus и Grafana
    - name: Create directories for Prometheus and Grafana
      file:
        path: "{{ item }}"
        state: directory
        owner: 472
        group: 472
        mode: '0775'
      loop:
        - ./volumes/prometheus
        - ./volumes/grafana
        - ./volumes/grafana/provisioning

    # Копируем файл конфигурации Prometheus
    - name: Copy minimal Prometheus configuration file
      copy:
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']
        dest: ./volumes/prometheus/prometheus.yml
        owner: 472
        group: 472
        mode: '0644'

    # Создаем файл docker-compose.yml
    - name: Create docker-compose.yml file
      copy:
        content: |
          version: '3'
          services:
            prometheus:
              image: prom/prometheus:latest
              volumes:
                - type: bind
                  source: ./volumes/prometheus
                  target: /etc/prometheus/
                  read_only: false
              container_name: prometheus
              hostname: prometheus
              command:
                - --config.file=/etc/prometheus/prometheus.yml
              ports:
                - 9090:9090
              restart: unless-stopped
              environment:
                TZ: "Europe/Moscow"
              networks:
                - default
            grafana:
              image: grafana/grafana
              user: root
              depends_on:
                - prometheus
              ports:
                - 3000:3000
              volumes:
                - type: bind
                  source: ./volumes/grafana
                  target: /var/lib/grafana
                  read_only: false
                - type: bind
                  source: ./volumes/grafana/provisioning/
                  target: /etc/grafana/provisioning/
                  read_only: false
              container_name: grafana
              hostname: grafana
              restart: unless-stopped
              environment:
                TZ: "Europe/Moscow"
              networks:
                - default
        dest: ./docker-compose.yml
        owner: 472
        group: 472
        mode: '0644'

    # Запускаем контейнеры с помощью docker-compose
    - name: Start containers using docker-compose
      command: docker compose up -d
      args:
        chdir: ./

